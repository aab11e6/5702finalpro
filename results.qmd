```{r setup, include=FALSE} 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```
# Results

```{r}
library(dplyr)
library(tidyr)
library(tibble)
library(ggplot2)
library(choroplethr)

# data preprocess 
data <- read.csv('insurance_claims.csv', na.strings = c("?", "NA"))
data <- subset(data, select = -X_c39)
```

## 1. Related to Policy
First, check the distribution of annual premium. 
```{r}
p <- ggplot(data, aes(x = policy_annual_premium, y = fraud_reported)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Annual premium amount", y = "Fraud Reported", title = "Annual premium amount by Fraud Reported")

p
```
policy_csl, policy_deductable and umbrella_limit are category features, so create alluvial and mosaic plots here. However, umbrella limit has too many values and is not that vital in our research, so only consider the other two.

Then I divided the annual premium into 3 categories according to the teir values.
```{r}
breaks <- quantile(data$policy_annual_premium, probs = c(0, 0.25, 0.75, 1), na.rm = TRUE)
labels <- c("low", "medium", "high")
data$premium_category <- cut(data$policy_annual_premium, breaks = breaks, labels = labels, include.lowest = TRUE)
```

```{r}
library(ggalluvial)
library(alluvial)

selected_data <- data %>% 
  select(policy_csl, policy_deductable, premium_category,fraud_reported)

frequency_data <- selected_data %>% 
  count(policy_csl, policy_deductable, premium_category, fraud_reported)

# 创建流图
ggplot(data = frequency_data, 
       aes(axis1 = policy_csl, axis2 = policy_deductable, axis3=premium_category, axis4=fraud_reported, y = n)) +
  geom_alluvium(aes(fill = fraud_reported)) +
  geom_stratum() +
  geom_text(stat = "stratum", aes(label = paste(after_stat(stratum), ":\n",after_stat(count)))) +
  scale_x_discrete(limits = c("Combined Single Limit", "Deductable","premium_category", "Fraud Reported")) + # 改变横坐标名称
  theme_minimal() +
  theme(
    axis.title.y = element_blank(), # 删除 y 轴标题
    axis.text.y = element_blank(), # 删除 y 轴文本
    axis.ticks.y = element_blank(), # 删除 y 轴刻度
    panel.border = element_blank(), # 删除边框
    panel.grid.major = element_blank(), # 删除主要网格线
    panel.grid.minor = element_blank() # 删除次要网格线
  ) +
  labs(title = "Relationships among Combined Single Limit, Deductable, Umbrella Limit and Fraud Reported",
       x = "") # 删除 x 轴标题

```
```{r}
vcd::mosaic(fraud_reported ~ policy_csl + policy_deductable + premium_category, data, direction = c('h','h','v'), main = "Association between Combined Single Limit , Deductable and Frauds", highlighting_fill=c("lightblue","lightgreen"))
```
From the above plots, we cannot see some obvious relationships between them.

## 2. Demograhic characteristics
Only two of the features related to demographic characteristics are continuous.

Depicts the distributions of continuous features respectively first.
Ridgelines:
```{r}
library(ggridges)
rg1 <- ggplot(data, aes(x = age, y = as.factor(fraud_reported), fill = as.factor(fraud_reported))) +
  geom_density_ridges(scale = 1.5, alpha = .5) +
  labs(title = "Age Distribution by Fraud Reported",
       x = "Age",
       y = "Fraud Reported") +
  theme_ridges()

rg2 <-ggplot(data, aes(x = months_as_customer, y = as.factor(fraud_reported), fill = as.factor(fraud_reported))) +
  geom_density_ridges(scale = 1.5, alpha = .5) +
  labs(title = "Months as Customer Distribution by Fraud Reported",
       x = "Months as Customer",
       y = "Fraud Reported") +
  theme_ridges()

rg1/rg2
```
Boxplots:
```{r}
b1 <- ggplot(data, aes(x = age, y = fraud_reported)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Age", y = "Fraud Reported", title = "Age by Fraud Reported")

b2 <- ggplot(data, aes(x = months_as_customer, y = fraud_reported)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Months as customer", y = "Fraud Reported", title = "Months as customer by Fraud Reported")

b1/b2
```
```{r}
unique(data$insured_occupation)
```
```{r}
fraud_rates <- data %>%
  group_by(insured_sex) %>%
  summarize(fraud_rate = mean(fraud_reported == "Y", na.rm = TRUE))

ggplot(fraud_rates, aes(x = insured_sex, y = fraud_rate, fill = insured_sex)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(title = "Fraud Rates by Sex",
       x = "Sex",
       y = "Fraud Rate (%)") +
  theme_minimal()
```
```{r}
# 加载所需的库
library(Lock5withR)
library(forcats)
# 创建单独的点图

fraud_rates <- data %>%
  group_by(insured_education_level) %>%
  summarize(fraud_rate = mean(fraud_reported == "Y", na.rm = TRUE))

c1 <- ggplot(fraud_rates, aes(x = fraud_rate, y = fct_reorder(insured_education_level, fraud_rate))) +
  geom_point(color = "blue") +
  ggtitle("Fraud Rate by education levels") +
  ylab("") +
  theme_linedraw()

fraud_rates <- data %>%
  group_by(insured_occupation) %>%
  summarize(fraud_rate = mean(fraud_reported == "Y", na.rm = TRUE))

c2 <- ggplot(fraud_rates, aes(x = fraud_rate, y = fct_reorder(insured_occupation, fraud_rate))) +
  geom_point(color = "blue") +
  ggtitle("Fraud Rate by occupations") +
  ylab("") +
  theme_linedraw()

fraud_rates <- data %>%
  group_by(insured_hobbies) %>%
  summarize(fraud_rate = mean(fraud_reported == "Y", na.rm = TRUE))

c3 <- ggplot(fraud_rates, aes(x = fraud_rate, y = fct_reorder(insured_hobbies, fraud_rate))) +
  geom_point(color = "blue") +
  ggtitle("Fraud Rate by hobbies") +
  ylab("") +
  theme_linedraw()

fraud_rates <- data %>%
  group_by(insured_relationship) %>%
  summarize(fraud_rate = mean(fraud_reported == "Y", na.rm = TRUE))

c4 <- ggplot(fraud_rates, aes(x = fraud_rate, y = fct_reorder(insured_relationship, fraud_rate))) +
  geom_point(color = "blue") +
  ggtitle("Fraud Rate by family relationship") +
  ylab("") +
  theme_linedraw()
```

```{r}
c1/c2
```
```{r}
c3
```
```{r}
c4
```
From the above plots, let us mainly focus on four discrete variables: insured_education_level, insured_occupation, insured hobbies and insured relationship.
```{r}
selected_data <- data %>% 
  select(insured_education_level, insured_occupation, fraud_reported)

frequency_data <- selected_data %>% 
  count(insured_education_level, insured_occupation, fraud_reported)

# 创建流图
ggplot(data = frequency_data, 
       aes(axis1 = insured_education_level, axis2 = insured_occupation, axis3=fraud_reported, y = n)) +
  geom_alluvium(aes(fill = fraud_reported)) +
  geom_stratum() +
  geom_text(stat = "stratum", aes(label = paste(after_stat(stratum), ":\n",after_stat(count)))) +
  scale_x_discrete(limits = c("Education Level", "Occupation", "Fraud Reported")) + # 改变横坐标名称
  theme_minimal() +
  theme(
    axis.title.y = element_blank(), # 删除 y 轴标题
    axis.text.y = element_blank(), # 删除 y 轴文本
    axis.ticks.y = element_blank(), # 删除 y 轴刻度
    panel.border = element_blank(), # 删除边框
    panel.grid.major = element_blank(), # 删除主要网格线
    panel.grid.minor = element_blank() # 删除次要网格线
  ) +
  labs(title = "Relationships among Education Level, Occupation and Fraud Reported",
       x = "") # 删除 x 轴标题
```

```{r}
data2 <- data

data2$fraud_reported_flag <- ifelse(data2$fraud_reported == "Y", 1, 0)

fraud_rates <- data2 %>%
  group_by(insured_education_level, insured_occupation) %>%
  summarise(fraud_rate = mean(fraud_reported_flag, na.rm = TRUE)) %>%
  ungroup()

# Create the heatmap
h1 <- ggplot(fraud_rates, aes(x = insured_education_level, y = insured_occupation, fill = fraud_rate)) +
  geom_tile() + 
  scale_fill_gradient(low = "white", high = "pink", labels = scales::percent_format()) +
  theme_minimal() +
  labs(x = "Education Level", y = "Occupation", fill = "Fraud Rate") +
  geom_text(aes(label = scales::percent(fraud_rate)), size = 4, colour = "black")
h1

```

```{r}
fraud_rates <- data2 %>%
  group_by(insured_relationship, insured_occupation) %>%
  summarise(fraud_rate = mean(fraud_reported_flag, na.rm = TRUE)) %>%
  ungroup()

# Create the heatmap
h2 <- ggplot(fraud_rates, aes(x = insured_relationship, y = insured_occupation, fill = fraud_rate)) +
  geom_tile() + 
  scale_fill_gradient(low = "white", high = "pink", labels = scales::percent_format()) +
  theme_minimal() +
  labs(y = "Occupation", x = "Family Relationship", fill = "Fraud Rate") +
  geom_text(aes(label = scales::percent(fraud_rate)), size = 4, colour = "black")
h2
```

```{r}
fraud_rates <- data2 %>%
  group_by(insured_education_level, insured_relationship) %>%
  summarise(fraud_rate = mean(fraud_reported_flag, na.rm = TRUE)) %>%
  ungroup()

# Create the heatmap
h3 <- ggplot(fraud_rates, aes(x = insured_education_level, y = insured_relationship, fill = fraud_rate)) +
  geom_tile() + 
  scale_fill_gradient(low = "white", high = "pink", labels = scales::percent_format()) +
  theme_minimal() +
  labs(x = "Education Level", y = "Family Relationship", fill = "Fraud Rate") +
  geom_text(aes(label = scales::percent(fraud_rate)), size = 4, colour = "black")
h3
```


